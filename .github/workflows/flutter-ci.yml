name: "Build & Release"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'

      - name: Decode Firebase Options
        run: |
          mkdir -p lib
          echo "${{ secrets.FIREBASE_OPTIONS }}" | base64 --decode > lib/firebase_options.dart
      - name: Decoded Firebase file
        run: |
          echo "${{ secrets.FIREBASE }}" | base64 --decode > firebase.json
      - name: Decoded Google Service
        run: |
          mkdir -p android/app
          echo "${{ secrets.GOOGLE_SERVICES }}" | base64 --decode > android/app/google-services.json
      - name: Verify Firebase Files
        run: |
          echo "=== Checking Firebase Options ==="
          test -f lib/firebase_options.dart && echo "✅ firebase_options.dart exists" || echo "❌ firebase_options.dart missing"
          
          echo "=== Checking firebase.json ==="
          test -f firebase.json && echo "✅ firebase.json exists" || echo "❌ firebase.json missing"
          
          echo "=== Checking google-services.json ==="
          test -f android/app/google-services.json && echo "✅ google-services.json exists" || echo "❌ google-services.json missing"
      - name: Install Dependencies
        run: flutter pub get


      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v4.6.2
        with:
          name: marketify-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}